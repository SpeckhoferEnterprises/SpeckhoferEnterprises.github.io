I"¡p<h1 id="jekyll-typora-and-mathjax">Jekyll, Typora and MathJax</h1>

<p>The purpose of this post is to explain how this whole website was created. The setup is based on <a href="https://www.youtube.com/watch?v=wCOInE7-E0I">https://www.youtube.com/watch?v=wCOInE7-E0I</a>. I recommend using <a href="https://pages.github.com/">GitHub Pages</a> to host your Jekyll page, but of course, there are also other options. For simplicity, I will assume that you want to create your Jekyll website in a folder called <code class="language-plaintext highlighter-rouge">[...].github.io</code> (e.g. after cloning your <code class="language-plaintext highlighter-rouge">[...].github.io</code> repository to create a local copy on your computer).</p>

<hr />

<p><strong>Contents:</strong></p>

<ul id="markdown-toc">
  <li><a href="#jekyll-typora-and-mathjax" id="markdown-toc-jekyll-typora-and-mathjax">Jekyll, Typora and MathJax</a>    <ul>
      <li><a href="#install-jekyll-and-make-a-jekyll-blogwebsite" id="markdown-toc-install-jekyll-and-make-a-jekyll-blogwebsite">Install Jekyll and make a Jekyll blog/website</a></li>
      <li><a href="#markdown" id="markdown-toc-markdown">Markdown</a></li>
      <li><a href="#typora" id="markdown-toc-typora">Typora</a></li>
      <li><a href="#using-markdown-files-in-jekyll" id="markdown-toc-using-markdown-files-in-jekyll">Using Markdown files in Jekyll</a>        <ul>
          <li><a href="#table-of-contents" id="markdown-toc-table-of-contents">Table of contents</a></li>
          <li><a href="#images" id="markdown-toc-images">Images</a></li>
        </ul>
      </li>
      <li><a href="#customization" id="markdown-toc-customization">Customization</a>        <ul>
          <li><a href="#syntax-highlighting-in-code-blocks" id="markdown-toc-syntax-highlighting-in-code-blocks">Syntax highlighting in code blocks</a></li>
          <li><a href="#task-lists-and-checkboxes" id="markdown-toc-task-lists-and-checkboxes">Task lists and checkboxes</a></li>
          <li><a href="#mathjax" id="markdown-toc-mathjax">MathJax</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
<hr />

<h2 id="install-jekyll-and-make-a-jekyll-blogwebsite">Install Jekyll and make a Jekyll blog/website</h2>

<ul>
  <li>
    <p>Go to <a href="https://jekyllrb.com/docs/installation/windows/">this page</a> and follow the instructions to install Jekyll.</p>
  </li>
  <li>Now you have two options to make a Jekyll blog/website:
    <ol>
      <li>Go to <a href="https://jekyllthemes.io/theme/startbootstrap-clean-blog-jekyll">this page</a> and click on ‚ÄúGet Clean Blog on GitHub‚Äù. This leads to <a href="https://github.com/StartBootstrap/startbootstrap-clean-blog-jekyll">a GitHub repository</a>. Clone/download everything to your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder. You can also use another template, but then some file and folder names may be different from the names in these instructions.</li>
      <li>Simply clone or download <a href="https://github.com/SpeckhoferEnterprises/SpeckhoferEnterprises.github.io">my repository</a> containing the website you are currently reading.</li>
    </ol>
  </li>
  <li>
    <p>Edit <code class="language-plaintext highlighter-rouge">_config.yml</code> to configure the general settings for the blog. You can edit your website e.g. in <a href="https://code.visualstudio.com/">Visual Studio Code</a>: If you click on <code class="language-plaintext highlighter-rouge">File - Open Folder</code> and choose the whole <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder in VS Code, you will have a clearly laid out file tree and you will be able to edit all the different files in one editor.</p>
  </li>
  <li>
    <p>Open a terminal/command prompt in your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder and execute the commands <code class="language-plaintext highlighter-rouge">bundle install</code> and then <code class="language-plaintext highlighter-rouge">bundle add webrick</code> and <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code>. Then, if everything worked, it should display something like:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>Server address: http://127.0.0.1:4000/
Server running... press ctrl-c to stop.
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>Now you can view the website in your browser at <code class="language-plaintext highlighter-rouge">localhost:4000</code> (where <code class="language-plaintext highlighter-rouge">4000</code> has to be replaced by the port at the end of the ‚Äúserver address‚Äù). Generally, you will not need to run the command every time you change something on the website or add a new post, but it may be necessary to do so, e.g. after changes in the <code class="language-plaintext highlighter-rouge">_config.yml</code> file. Otherwise, it suffices to reload the page in the browser. You can also make a <code class="language-plaintext highlighter-rouge">.bat</code> file containing</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>cmd /k bundle exec jekyll serve
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p>so that you do not have to remember the command (and using <code class="language-plaintext highlighter-rouge">cmd /k</code>, the cmd window does not close after stopping the server). Your website will be generated in the <code class="language-plaintext highlighter-rouge">_site</code> folder, but you will not have to upload this folder to GitHub, because instead, the files in the <code class="language-plaintext highlighter-rouge">_posts</code> folder will be used on GitHub in order to generate your website. Therefore, a <code class="language-plaintext highlighter-rouge">.gitignore</code> file containing the <code class="language-plaintext highlighter-rouge">_site</code> folder (and some other files) is generated automatically in your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder.</p>
  </li>
</ul>

<h2 id="markdown">Markdown</h2>

<p><a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a> is a markup language that is used to create formatted text in a plain-text editor. This means that you can simply write plain text files (which are usually saved with the extension <code class="language-plaintext highlighter-rouge">.md</code>) containing special syntax for formatting. It is used to write websites, blog posts, documentations and even books (and of course, everything on this page was written in Markdown). Markdown files can be exported to other formats like HTML or PDF. But unlike HTML, you do not need ‚Äúugly‚Äù tags like <code class="language-plaintext highlighter-rouge">&lt;h1&gt;Heading&lt;/h1&gt;</code>, and so the text will also be clearly readable in any plain text editor. Here you can see an overview of the most important Markdown syntax (ignore the line breaks after line 7, 8 and 32, 33 ‚Äì they are just there so that everything can be displayed at once in the code block):</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="gh"># This is a level 1 heading</span>

<span class="gu">## This is a level 2 heading</span>

<span class="gu">### This is a level 3 heading ...</span>

This is a normal paragraph. You can write <span class="gs">**bold**</span> or
<span class="ge">_italic_</span> (or <span class="ge">*italic*</span>) text, and it is also possible to write
<span class="sb">`inline code`</span>. Furthermore, you can create unnumbered lists:
<span class="p">
-</span> first item
<span class="p">-</span> second item

and numbered lists:
<span class="p">
1.</span> another item
<span class="p">2.</span> You can always use '1.', so the order can be changed easily:
<span class="p">	1.</span> first item (displayed as: "1. first item")
<span class="p">	1.</span> second item (displayed as: "2. second item")
<span class="gt">
&gt; This is a block quote. This is a link: [text](url)</span>

The following will be displayed as a horizontal line:
<span class="p">
---
</span>
You can make tables (better use a Markdown editor for that):

| Column 1 | Column 2 | Column 3 |
| -------- | -------- | -------- |
| a        | b        | c        |
| This     | is       | a table. |

If you are using GitHub Flavored Markdown (which will be
possible in this setup), you can also use fenced code blocks
and specify a language for syntax highlighting:

‚Äã~~~python
print("hello world")
‚Äã~~~

</pre></td></tr></tbody></table></code></pre></div></div>

<p>For more details and commands in Markdown, read <a href="https://guides.github.com/features/mastering-markdown/">this page</a>, <a href="https://www.markdownguide.org/basic-syntax/">this page</a> and <a href="https://support.typora.io/Markdown-Reference/">this page</a>. You can also try out the online Markdown editors <a href="https://pandao.github.io/editor.md/en.html">Editor.md</a> and <a href="https://dillinger.io/">Dillinger</a>.</p>

<h2 id="typora">Typora</h2>

<p><a href="https://typora.io/">Typora</a> is a very feature-rich and easy-to-use Markdown editor (and it is free during beta). You can download it <a href="https://typora.io/#download">here</a>. It is a ‚Äúwhat you see is what you get‚Äù editor that can display all the elements described above (i.e. headings, links, tables, code blocks etc.), but there is also a ‚ÄúSource Code Mode‚Äù. If you write <code class="language-plaintext highlighter-rouge">[TOC]</code>, Typora will generate a table of contents with clickable links automatically! There are also keyboard shortcuts ‚Äì you can press e.g. <code class="language-plaintext highlighter-rouge">Ctrl</code> and <code class="language-plaintext highlighter-rouge">+</code> or <code class="language-plaintext highlighter-rouge">-</code> in order to change the level of a heading ‚Äì and it is also very easy to make tables in Typora. Typora also supports $\LaTeX$ inline math and math blocks, and you can export to HTML, PDF and many other formats. Later we will discuss how to insert images (which will be copied to the correct folder in your Jekyll page automatically). Finally, Typora also supports normal HTML tags.</p>

<p>I suggest that you go to <code class="language-plaintext highlighter-rouge">File - Preferences</code> (or pressing <code class="language-plaintext highlighter-rouge">Ctrl + comma</code>) and have a look at all the settings. Under <code class="language-plaintext highlighter-rouge">Appearence</code>, you can click on <code class="language-plaintext highlighter-rouge">Open Theme Folder</code> and paste the file <a href="/files/2021-07-18-jekyll-typora-and-mathjax/mytheme.css">mytheme.css</a> into the theme folder. Then you can click on <code class="language-plaintext highlighter-rouge">Themes</code> in Typora‚Äôs menu bar and choose the theme ‚ÄúMytheme‚Äù in order to get basically the same formatting in Typora as in my Jekyll page (using e.g. the Palatino font).</p>

<h2 id="using-markdown-files-in-jekyll">Using Markdown files in Jekyll</h2>

<p>Jekyll generates a blog using all text files of the form <code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.md</code> (or <code class="language-plaintext highlighter-rouge">.html</code>) in the folder <code class="language-plaintext highlighter-rouge">[...].github.io/_posts</code> (but files with a future date will not be displayed on the page before that date). In order to use <code class="language-plaintext highlighter-rouge">.md</code> files for a Jekyll blog, they have to start with a YAML front matter block that sets the layout and other meta data, for example:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Jekyll,</span><span class="nv"> </span><span class="s">Typora</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">MathJax"</span>
<span class="na">subtitle</span><span class="pi">:</span> <span class="s2">"</span><span class="s">A</span><span class="nv"> </span><span class="s">tutorial</span><span class="nv"> </span><span class="s">that</span><span class="nv"> </span><span class="s">explains</span><span class="nv"> </span><span class="s">how</span><span class="nv"> </span><span class="s">this</span><span class="nv"> </span><span class="s">website</span><span class="nv"> </span><span class="s">was</span><span class="nv"> </span><span class="s">created."</span>
<span class="na">background</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/img/background.jpg"</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="table-of-contents">Table of contents</h3>

<p>Instead of the usual Markdown command <code class="language-plaintext highlighter-rouge">[TOC]</code>, you have to write</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="p">-</span> TOC
{:toc}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>in order to create a table of contents that is recognized by Jekyll. If you do not want bullets in the table of contents, add the following lines to the file <code class="language-plaintext highlighter-rouge">assets/vendor/startbootstrap-clean-blog/scss/_global.scss</code> (or <code class="language-plaintext highlighter-rouge">assets/main.scss</code>), which also adjusts some other CSS settings:</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c1">// Table of contents:</span>
<span class="nn">#markdown-toc</span> <span class="p">{</span>
	<span class="nl">list-style-type</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
	<span class="nl">padding</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
	<span class="nl">background-color</span><span class="p">:</span> <span class="mh">#f8f9fa</span><span class="p">;</span>
	<span class="nl">border-radius</span><span class="p">:</span> <span class="m">6px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nn">#markdown-toc</span> <span class="o">*</span> <span class="p">{</span>
	<span class="nl">list-style-type</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="images">Images</h3>

<p>In the <code class="language-plaintext highlighter-rouge">_posts</code> folder, only the files containing the actual posts are used by Jekyll, and all other files or folders are ignored. Thus, if you want to add images to a post, the best option is to copy all images into another folder, e.g. <code class="language-plaintext highlighter-rouge">[...].github.io/img</code>. Now add the following line to your YAML header:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="na">typora-root-url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">.."</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This will change the Typora root url to your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder instead of <code class="language-plaintext highlighter-rouge">[...].github.io/_posts</code>. Now you can e.g. include the background image <code class="language-plaintext highlighter-rouge">/img/background.jpg</code> by typing <code class="language-plaintext highlighter-rouge">![background](/img/background.jpg)</code>. In order to change the size, alignment etc. you can use HTML commands like</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;center&gt;&lt;img</span> <span class="na">src=</span><span class="s">"/img/background.jpg"</span> <span class="na">width=</span><span class="s">"70%"</span><span class="nt">/&gt;&lt;/center&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>instead. It is also a good idea to go to <code class="language-plaintext highlighter-rouge">File - Preferences... - Image</code> in Typora and change <code class="language-plaintext highlighter-rouge">When Insert</code> to <code class="language-plaintext highlighter-rouge">Copy image to custom folder</code> and type <code class="language-plaintext highlighter-rouge">../img/${filename}</code>. Now you can drag and drop any image into a file opened in Typora, and it will be copied to <code class="language-plaintext highlighter-rouge">/img/[filename]</code> automatically.</p>

<blockquote>
  <p><em>Remark:</em> You may have to click into the line <code class="language-plaintext highlighter-rouge">typora-root-url: ".."</code> once after starting Typora so that the root url is updated and the images are found.</p>
</blockquote>

<h2 id="customization">Customization</h2>

<p><strong>Note: If you have cloned <a href="https://github.com/SpeckhoferEnterprises/SpeckhoferEnterprises.github.io">my repository</a>, you will not need the steps described in this chapter ‚Äì everything should work out of the box. Nevertheless, I recommend reading them in order to find out how to customize all the settings yourself!</strong></p>

<p>Generally, you can edit all the SCSS files in the <code class="language-plaintext highlighter-rouge">assets</code> folder or copy my files. I have modified e.g. the file <code class="language-plaintext highlighter-rouge">assets/vendor/startbootstrap-clean-blog/scss/variables/_typography.scss</code> in order to change the fonts and the file <code class="language-plaintext highlighter-rouge">assets/vendor/bootstrap/scss/_tables.scss</code> in order to change the style of tables.</p>

<h3 id="syntax-highlighting-in-code-blocks">Syntax highlighting in code blocks</h3>

<p>In order to use syntax highlighting in code blocks, first type <code class="language-plaintext highlighter-rouge">gem install rouge</code> in a terminal/command prompt. Alternatively, you can add</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1"># Rouge:</span>
<span class="n">gem</span> <span class="s2">"rouge"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>to the file called <code class="language-plaintext highlighter-rouge">Gemfile</code> and then execute the command <code class="language-plaintext highlighter-rouge">bundle</code> in your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder to install Rouge. Next, open the <code class="language-plaintext highlighter-rouge">_config.yml</code> file, and after the line <code class="language-plaintext highlighter-rouge">markdown: kramdown</code> paste the following lines:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="na">kramdown</span><span class="pi">:</span>
  <span class="na">input</span><span class="pi">:</span> <span class="s">GFM</span>
  <span class="na">syntax_highlighter</span><span class="pi">:</span> <span class="s">rouge</span>
  <span class="na">syntax_highlighter_opts</span><span class="pi">:</span>
    <span class="na">block</span><span class="pi">:</span>
      <span class="na">line_numbers</span><span class="pi">:</span> <span class="no">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In your <code class="language-plaintext highlighter-rouge">assets</code> folder, make a Pygment CSS theme file called <code class="language-plaintext highlighter-rouge">highlight.css</code> (Rouge is compatible with Pygments‚Äôs stylesheets). You can choose a theme from <a href="https://github.com/jwarby/jekyll-pygments-themes">https://github.com/jwarby/jekyll-pygments-themes</a> and paste the contents into your theme file. I am using the ‚Äúgithub‚Äù theme. Finally, add the line</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">@import</span> <span class="s2">"highlight.css"</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>to your <code class="language-plaintext highlighter-rouge">main.scss</code> file in the <code class="language-plaintext highlighter-rouge">assets</code> folder. You can edit the style of your code blocks in <code class="language-plaintext highlighter-rouge">assets\vendor\bootstrap\scss\_code.scss</code>, or you can just copy my <code class="language-plaintext highlighter-rouge">_code.scss</code> file.</p>

<h3 id="task-lists-and-checkboxes">Task lists and checkboxes</h3>

<p>In order to display checkboxes like in Typora, first add the following lines to <code class="language-plaintext highlighter-rouge">assets/vendor/startbootstrap-clean-blog/scss/_global.scss</code> (or to <code class="language-plaintext highlighter-rouge">assets/main.scss</code>):</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="c1">// Task lists:</span>
<span class="nc">.task-list</span> <span class="p">{</span>
	<span class="nl">padding-left</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.task-list-item</span> <span class="p">{</span>
	<span class="nl">list-style-type</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.task-list-item-checkbox</span> <span class="p">{</span>
	<span class="nl">margin-right</span><span class="p">:</span> <span class="m">18px</span><span class="p">;</span>
	<span class="nl">vertical-align</span><span class="p">:</span> <span class="nb">middle</span><span class="p">;</span>
	<span class="nl">pointer-events</span><span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now the checkboxes will be displayed in the correct positions and without unnecessary bullets, but they will be disabled and thus greyed out. If you want them to have a normal black outline and blue background (like when you export to HTML in Typora), add the following command to the file <code class="language-plaintext highlighter-rouge">scripts.js</code> in your <code class="language-plaintext highlighter-rouge">assets</code> folder:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>  <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
  	<span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.task-list-item-checkbox</span><span class="dl">'</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="dl">"</span><span class="s2">disabled</span><span class="dl">"</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span> 
  <span class="p">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now the checkboxes will behave like in an HTML file generated by Typora: They will look like they are active, but the line <code class="language-plaintext highlighter-rouge">pointer-events: none</code> in <code class="language-plaintext highlighter-rouge">_global.scss</code> will disable all events when clicking on them (obviously, you can change that).</p>

<h3 id="mathjax">MathJax</h3>

<p>You can use <a href="https://www.mathjax.org/">MathJax</a> by adding the following lines to the file <code class="language-plaintext highlighter-rouge">scripts.html</code> in your <code class="language-plaintext highlighter-rouge">[...].github.io</code> folder:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;script </span><span class="na">id=</span><span class="s">"MathJax-script"</span> <span class="na">async</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
	<span class="nb">window</span><span class="p">.</span><span class="nx">MathJax</span> <span class="o">=</span> <span class="p">{</span>
		<span class="na">tex</span><span class="p">:</span> <span class="p">{</span>
			<span class="na">inlineMath</span><span class="p">:</span> <span class="p">[[</span><span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">],</span> <span class="p">[</span><span class="dl">'</span><span class="se">\\</span><span class="s1">(</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="se">\\</span><span class="s1">)</span><span class="dl">'</span><span class="p">]],</span>
			<span class="na">tags</span><span class="p">:</span> <span class="dl">'</span><span class="s1">ams</span><span class="dl">'</span>
	<span class="p">}</span>
<span class="p">};</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, add the following lines to <code class="language-plaintext highlighter-rouge">_global.scss</code> or <code class="language-plaintext highlighter-rouge">main.scss</code> in order to get obtain correct font sizes:</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">.MathJax</span> <span class="p">{</span>
	<span class="nl">font-size</span><span class="p">:</span> <span class="nb">inherit</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now you can write e.g. <code class="language-plaintext highlighter-rouge">$\int f(x)\,\mathrm{d}x$</code>, and it will be displayed as $\int f(x)\,\mathrm{d}x$ (and you can also use other MathJax features, such as numbered equations, cross-referencing etc.)</p>

:ET